{"version":3,"sources":["components/auth/AuthService.js","components/auth/Signup.js","components/auth/Login.js","components/user/User.js","components/Home.js","components/auth/AuthServiceClub.js","components/auth/Clubsignup.js","components/auth/Clublogin.js","components/club/Club.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","Signup","props","handleFormSubmit","event","preventDefault","state","setState","getUser","user","catch","error","handleChange","target","name","value","onSubmit","type","onChange","e","to","Component","Login","User","className","exact","path","render","Home","onClick","setFlow","React","AuthServiceClub","clubname","Clubsignup","getclub","club","Clublogin","Club","getClub","App","userObj","loggedInUser","chosenFlow","allPost","fetchUser","err","flowType","flow","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1468e2c2.chunk.js","sourcesContent":["// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n  \n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentuser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\n\nexport default AuthService;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\n// import Login from '../auth/Login';\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Welcome!, create your account next:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n        <Link  to=\"/login\" >login</Link>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\n// import Signup from './Signup';\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n      <Link to=\"/signup\" >signup</Link>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport \"./User.css\";\nimport { Link , Route,Switch } from \"react-router-dom\";\n// import Navbar from \"../navbar/Navbar\";\n// import Signup from \"../auth/Signup\";\n// import Login from \"../auth/Login\";\n// import AuthService from \"../auth/AuthService\";\n// import Contents from \"../contents/Contents\";\n// import axios from \"axios\"\n// import Containpost from \"../containpost\"\nimport Signup from \"../auth/Signup\";\nimport Login from \"../auth/Login\";\n\nclass User extends Component {\n   \n//   state={\n//     allPost:null\n    \n// }\n//     componentDidMount(){\n//         axios.get(\"http://localhost:4000/post\")\n//         .then(allPost =>  this.setState({allPost: allPost}),\n        \n//         )}\n\n\n\n    render() {\n\n      return(\n          <div className=\"user\">\n            <h1>wooolaaaa</h1>\n            <div >\n            <Switch>\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n              </Switch>\n     </div>  \n          </div>\n      )\n     \n    }\n  }\n  \n  \n  export default User;\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./home.css\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\"> Special title treatment </h5>{\" \"}\n                <p className=\"card-text\">\n                  {\" \"}\n                  With supporting text below as a natural lead - in to\n                  additional content.{\" \"}\n                </p>{\" \"}\n                <Link to=\"/user\" className=\"btn btn-primary\">\n                  <h1 onClick={() => this.props.setFlow(\"jugador\")}>\n                    {\" \"}\n                    JUGADOR{\" \"}\n                  </h1>\n                </Link>\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div className=\"col-sm-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\"> Special title treatment </h5>{\" \"}\n                <p className=\"card-text\">\n                  {\" \"}\n                  With supporting text below as a natural lead - in to\n                  additional content.{\" \"}\n                </p>{\" \"}\n                <Link to=\"/club\" className=\"btn btn-primary\">\n                  <h1 onClick={() => this.props.setFlow(\"club\")}> CLUB </h1>\n                </Link>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n        </div>{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthServiceClub {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n  \n\n\n\n  signup = (clubname, password) => {\n    return this.service.post('/clubsignup', {clubname, password})\n    .then(response => response.data)\n  }\n\n  login = (clubname, password) => {\n    return this.service.post('/clublogin', {clubname, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentclub',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthServiceClub;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthServiceClub from './AuthServiceClub'\n// import Login from '../auth/Login';\nimport { Link } from \"react-router-dom\";\n\nclass Clubsignup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { clubname: '', password: '' };\n    this.service = new AuthServiceClub();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const clubname = this.state.clubname;\n    const password = this.state.password;\n\n    this.service.signup(clubname, password)\n    .then( response => {\n        this.setState({\n            clubname: \"\", \n            password: \"\",\n        });\n        this.props.getclub(response.club)\n    })\n    .catch(error => {\n      this.setState({\n        clubname: clubname,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Welcome!, create your account next:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>clubname:</label>\n            <input type=\"text\" name=\"clubname\" value={this.state.clubname} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n        <Link  to=\"/Clublogin\" >login</Link>\n\n        <h1>{this.state.error ? 'yooooooo' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Clubsignup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\n// import Signup from './Signup';\nimport { Link } from \"react-router-dom\";\n\nclass Clublogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { clubname: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const clubname = this.state.clubname;\n    const password = this.state.password;\n\n    this.service.login(clubname, password)\n      .then(response => {\n        this.setState({\n          clubname: clubname,\n          password: password,\n          error: false\n        });\n\n        this.props.getclub(response)\n      })\n      .catch(error => {\n        this.setState({\n          clubname: clubname,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>clubname:</label>\n          <input type=\"text\" name=\"clubname\" value={this.state.clubname} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n      <Link to=\"/Clubsignup\"  >signup</Link>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Clublogin;","import React  from \"react\";\nimport { Link  } from \"react-router-dom\";\n// import Navbar from \"../navbar/Navbar\";\n// import AuthService from \"../auth/AuthService\";\n// import Contents from \"../contents/Contents\";\nimport \"./club.css\";\nimport Clubsignup from \"../auth/Clubsignup\";\nimport Clublogin from \"../auth/Clublogin\";\n\nclass Club extends React.Component {\n\n  \n      render() {\n        return (\n        <div className=\"club\">\n          \n        <h1>Club login</h1>\n        <div >\n           \n             \n            \n                <Link  to=\"/Clubsignup\" render={() => <Clubsignup getUser={this.getClub} />} >sigmup</Link>\n                <Link  to=\"/Clublogin\" render={() => <Clublogin getClub={this.getClub} />} >login</Link>\n\n           \n          </div>\n        </div>\n        )}\n}\n\nexport default Club;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n// import Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\n// import Contents from \"./components/contents/Contents\";\nimport User from \"./components/user/User\";\nimport Home from \"./components/Home\";\nimport Club from \"./components/club/Club\";\n// import axios from \"axios\"\nimport Clubsignup from \"./components/auth/Clubsignup\";\nimport Clublogin from \"./components/auth/Clublogin\";\n\nclass App extends Component {\n \n\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null, chosenFlow: null, allPost:[]};\n    this.service = new AuthService();\n\n    this.fetchUser()\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  // componentDidMount(){\n   \n  //     axios.get(\"http://localhost:4000/post\")\n  //     .then(allPost =>  this.setState({allPost: allPost}),\n      \n  //     )}\n\n  setFlow(flowType){\n    this.setState({\n      ...this.state, \n      chosenFlow: flowType\n    })\n  }\n\nrender(){\n\n        return ( \n            <div className=\"App\">\n              <header className=\"App-header\">\n                <Switch>\n                  <Route exact path=\"/\" render={() => <Home setFlow={(flow) => this.setFlow(flow)}/>} />\n                  <Route exact path=\"/club\" render={() => <Club allPost={this.state.allPost} getUser={this.getUser} />} />\n                  <Route exact path=\"/user\" render={() => <User  allPost={this.state.allPost} getUser={this.getUser} />} />\n                  <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                  <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n                  <Route exact path=\"/Clubsignup\" render={() => <Clubsignup getClub={this.getClub} />} />\n                  <Route exact path=\"/Clublogin\" render={() => <Clublogin getClub={this.getClub} />} />\n                </Switch>\n              </header>\n            </div>\n        );\n      }\n    }\n// }\n\nexport default App;\n\n\n\n\n\n\n\n// state={\n  //     allPost:[]\n  // }\n  \n  //   componentDidMount(){\n  //     axios.get(\"\")\n  //     .then(allPost =>  this.setState({allPost: allPost}),\n  //     )}\n  //   render() {\n  \n  \n  //     return(\n  //     <section >\n  //       <Switch>\n  //             <Route\n  //               exact\n  //               path=\"/\"\n  //               render={() => {\n  //                 // let allMovies = this.state.movies\n  //                 return <Home ></Home>;\n  //               }}\n  //             />\n  //              <Route\n  //               exact\n  //               path=\"/user\"\n  //               render={() => {\n  //                 // let allMovies = this.state.movies\n  //                 return <User></User>;\n  //               }}\n  //             />\n  //               <Route\n  //               exact\n  //               path=\"/clubs\"\n  //               render={() => {\n  //                 return <Club></Club>;\n  //               }}\n  //             />\n  //              </Switch>\n  //              </section>\n  //     )","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}